// Responsive mixins
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}.";
  }
}

// Flexbox helpers
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Truncate text with ellipsis
@mixin truncate($width: 100%) {
  max-width: $width;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Box shadow levels
@mixin shadow($level: 1) {
  @if $level == 1 {
    box-shadow:
      0 1px 3px rgba(0, 0, 0, 0.12),
      0 1px 2px rgba(0, 0, 0, 0.24);
  } @else if $level == 2 {
    box-shadow:
      0 3px 6px rgba(0, 0, 0, 0.16),
      0 3px 6px rgba(0, 0, 0, 0.23);
  } @else if $level == 3 {
    box-shadow:
      0 10px 20px rgba(0, 0, 0, 0.19),
      0 6px 6px rgba(0, 0, 0, 0.23);
  } @else if $level == 4 {
    box-shadow:
      0 14px 28px rgba(0, 0, 0, 0.25),
      0 10px 10px rgba(0, 0, 0, 0.22);
  } @else if $level == 5 {
    box-shadow:
      0 19px 38px rgba(0, 0, 0, 0.3),
      0 15px 12px rgba(0, 0, 0, 0.22);
  }
}

// Transition mixin
@mixin transition($property: all, $duration: $transition-duration, $timing: $transition-timing) {
  transition: $property $duration $timing;
}

// Border radius mixin
@mixin border-radius($radius: $border-radius-md) {
  border-radius: $radius;
}

// Spacing helpers
@mixin padding($size: 'md') {
  padding: map-get($spacing, $size);
}

@mixin margin($size: 'md') {
  margin: map-get($spacing, $size);
}

// Quick gradient backgrounds
@mixin gradient($direction: to right, $start-color: $primary-color, $end-color: $accent-color) {
  background: linear-gradient($direction, $start-color, $end-color);
}
